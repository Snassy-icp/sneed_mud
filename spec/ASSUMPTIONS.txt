SNEED MUD - Technical Assumptions
================================

This document lists the core technical assumptions that inform the design of all game systems.

1. Internet Computer Platform Constraints
---------------------------------------
- Update calls have 1-2 second latency (minimum)
- Query calls should not exceed once per second frequency
- State updates and combat actions must account for these latencies
- All timing values in specifications must respect these technical limitations

2. Backend Architecture Constraints
---------------------------------
- No recurring timer events or game loops exist on the backend
- All state changes are driven by explicit user actions (button clicks)
- Backend has no autonomous update mechanisms
- Time-based mechanics must be calculated based on timestamps at time of user actions
- IC handles all command queuing and state transaction management natively
- Frontend maintains a query loop for state updates, but cannot drive backend "ticks"

Impact:
- All game systems must be designed with these constraints in mind
- Timing values in specifications must allow for these latencies
- User interface must account for expected delays
- Game mechanics should feel natural despite these constraints
- All time-based calculations must be done at the moment of user interaction
- Systems must be designed around explicit state changes, not continuous updates

3. Data Formatting and Display Principles
---------------------------------------
- Backend sends only structured data, never pre-formatted strings
- Frontend is responsible for all data formatting and display
- This separation ensures:
  * Consistent data structures for programmatic use
  * Flexible display options (different formats, localizations)
  * Clear separation of concerns between data and presentation
  * Easier testing and validation of data structures
  * Future-proof interface for different display requirements

Impact:
- All backend responses should use well-defined data structures
- Text formatting and layout is handled exclusively by frontend
- Message logs and display text generated from structured data
- Frontend maintains responsibility for "pretty printing" all data
- Changes to display format only require frontend updates 